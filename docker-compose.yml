services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app

  app:
    build:
      context: ./apps/core-api
      dockerfile: Dockerfile
    expose:
      - "3000"
    environment:
      - CASSANDRA_KEYSPACE=events
      - WAIT_HOSTS=rabbitmq:5672
      - RABBITMQ_URI=amqp://rabbitmq
    depends_on:
      - rabbitmq
      - kafka
      - redis
      - postgres
      - mongo
      - cassandra
      - nifi

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_URI=amqp://rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: bitnami/kafka:3.3.2
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper

  zookeeper:
    image: bitnami/zookeeper:latest
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

  postgres:
    image: postgres:alpine
    environment:
      - POSTGRES_DB=events
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"

  cassandra:
    image: cassandra:latest
    ports:
      - "9042:9042"

  nifi:
    image: apache/nifi:latest
    ports:
      - "8080:8080"